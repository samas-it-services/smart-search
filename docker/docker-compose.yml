version: '3.8'

services:
  # Database Services
  mysql:
    image: mysql:8.0
    container_name: smart-search-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: smartsearch
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init/mysql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - smart-search-network

  postgres:
    image: postgres:15
    container_name: smart-search-postgres
    environment:
      POSTGRES_DB: smartsearch
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init/postgres:/docker-entrypoint-initdb.d
    networks:
      - smart-search-network

  mongodb:
    image: mongo:7.0
    container_name: smart-search-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: smartsearch
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init/mongodb:/docker-entrypoint-initdb.d
    networks:
      - smart-search-network

  # Cache Services
  redis:
    image: redis:7.2-alpine
    container_name: smart-search-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/etc/redis/redis.conf
    command: redis-server /etc/redis/redis.conf
    networks:
      - smart-search-network

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:v1.15.1
    container_name: smart-search-dragonfly
    ports:
      - "6380:6379"
    volumes:
      - dragonfly_data:/data
    command: dragonfly --logtostderr
    networks:
      - smart-search-network

  memcached:
    image: memcached:1.6-alpine
    container_name: smart-search-memcached
    ports:
      - "11211:11211"
    command: memcached -m 64
    networks:
      - smart-search-network

  # Monitoring Services
  prometheus:
    image: prom/prometheus:latest
    container_name: smart-search-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - smart-search-network

  grafana:
    image: grafana/grafana:latest
    container_name: smart-search-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - smart-search-network

  # Database Exporters
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: smart-search-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/smartsearch?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - postgres
    networks:
      - smart-search-network

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: smart-search-mysql-exporter
    environment:
      DATA_SOURCE_NAME: "user:password@(mysql:3306)/smartsearch"
    ports:
      - "9104:9104"
    depends_on:
      - mysql
    networks:
      - smart-search-network

  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: smart-search-mongodb-exporter
    environment:
      MONGODB_URI: "mongodb://root:rootpassword@mongodb:27017"
    ports:
      - "9216:9216"
    depends_on:
      - mongodb
    networks:
      - smart-search-network

  # Cache Exporters
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: smart-search-redis-exporter
    environment:
      REDIS_ADDR: "redis://redis:6379"
    ports:
      - "9121:9121"
    depends_on:
      - redis
    networks:
      - smart-search-network

  dragonfly-exporter:
    image: oliver006/redis_exporter:latest
    container_name: smart-search-dragonfly-exporter
    environment:
      REDIS_ADDR: "redis://dragonfly:6379"
    ports:
      - "9122:9121"
    depends_on:
      - dragonfly
    networks:
      - smart-search-network

  memcached-exporter:
    image: prom/memcached-exporter:latest
    container_name: smart-search-memcached-exporter
    command:
      - '--memcached.address=memcached:11211'
    ports:
      - "9150:9150"
    depends_on:
      - memcached
    networks:
      - smart-search-network

  # System Monitoring
  node-exporter:
    image: prom/node-exporter:latest
    container_name: smart-search-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - smart-search-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: smart-search-cadvisor
    ports:
      - "8083:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - smart-search-network

  # Development Services
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: smart-search-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379,dragonfly:dragonfly:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
      - dragonfly
    networks:
      - smart-search-network

  adminer:
    image: adminer:4
    container_name: smart-search-adminer
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - postgres
    networks:
      - smart-search-network

  mongo-express:
    image: mongo-express:1.0.0
    container_name: smart-search-mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
      ME_CONFIG_MONGODB_URL: mongodb://root:rootpassword@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - "8082:8081"
    depends_on:
      - mongodb
    networks:
      - smart-search-network

volumes:
  mysql_data:
    driver: local
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  dragonfly_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  smart-search-network:
    driver: bridge